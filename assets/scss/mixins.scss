@use './variables.scss' as *;

@mixin flex ($justify: flex-start, $align: stretch, $direction: row, $wrap: nowrap, $gap: 0) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
    flex-wrap: $wrap;
    gap: $gap;
}

@mixin grid ($column, $gap) {
    display: grid;
    grid-template-columns: repeat($column, 1fr);
    grid-gap: $gap;
}

@mixin breakpoint($breakpoint) {

    @if $breakpoint==xl {
        @media (max-width: 1200px) {
            @content ;
        }
    }

    @else if $breakpoint==lg {
        @media (max-width: 992px) {
            @content ;
        }
    }

    @else if $breakpoint==md {
        @media (max-width: 768px) {
            @content ;
        }
    }

    @else if $breakpoint==sm {
        @media (max-width: 576px) {
            @content ;
        }
    }

    @else if $breakpoint==xs {
        @media(max-width:350px) {
            @content;
        }
    }
}


@mixin positioning ($position, $top, $right, $bottom, $left, $width: 100%, $height: 100%) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    width: $width;
    height: $height;
}


@mixin btn($color: white, $bgColor: $primaryColor, $bgColorAfter: white, $colorHover: $primaryColor, $colorAfterHover: $primaryColor) {
    display: inline-block;
    margin-top: 1rem;
    padding: 1rem;
    text-transform: uppercase;
    background-color: $bgColor;
    color: $color;
    font-weight: 500;
    position: relative;
    z-index: 2;

    &::after {
        display: block;
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 0;
        height: 0;
        background-color: $bgColorAfter;
        transition: 0.6s linear;
        z-index: -1;
    }

    &:hover {
        color: $colorHover;
    }

    &:hover::after {
        top: 0%;
        bottom: 0%;
        right: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        transform: translate(0%, 0%);
        transition: 0.6s linear;
        color: $colorAfterHover;
    }
}